(self.webpackChunkdev_cornelldti_org=self.webpackChunkdev_cornelldti_org||[]).push([[722],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),f=u(r),m=a,d=f["".concat(s,".").concat(m)]||f[m]||p[m]||o;return r?n.createElement(d,i(i({ref:t},c),{},{components:r})):n.createElement(d,i({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},2557:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return i},metadata:function(){return l},toc:function(){return s},default:function(){return c}});var n=r(2122),a=r(9756),o=(r(7294),r(3905)),i={id:"slab-large-tasks",title:"How to Break Down Large Tasks"},l={unversionedId:"slab-large-tasks",id:"slab-large-tasks",isDocsHomePage:!1,title:"How to Break Down Large Tasks",description:"- Think about what's the smallest non-negative change that leads one step closer to your final task.",source:"@site/docs/slab-large-tasks.md",sourceDirName:".",slug:"/slab-large-tasks",permalink:"/docs/slab-large-tasks",version:"current",frontMatter:{id:"slab-large-tasks",title:"How to Break Down Large Tasks"},sidebar:"someSidebar",previous:{title:"JavaScript Unit Testing",permalink:"/docs/slab-javascript-unit-testing"},next:{title:"Postmortem Template",permalink:"/docs/slab-postmortem-template"}},s=[],u={toc:s};function c(e){var t=e.components,r=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Think about what's the smallest non-negative change that leads one step closer to your final task.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Non-negative means that your change can be merged into master without breaking anything."),(0,o.kt)("li",{parentName:"ul"},"Smallest means removing unnecessary changes: e.g. do not fix two unrelated bugs in one PR. Create two instead. Don't be too ambitious to do everything at once."))),(0,o.kt)("li",{parentName:"ul"},"Plan ahead",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"You might find yourself in this situation.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"I need to do feature A."),(0,o.kt)("li",{parentName:"ul"},"After some coding, I found that feature A depends on refactor B."),(0,o.kt)("li",{parentName:"ul"},"After some refactoring, I found that refactor B depends on bug fix C."),(0,o.kt)("li",{parentName:"ul"},"..."),(0,o.kt)("li",{parentName:"ul"},"After all steps are done, diff is already 4000+ line long."),(0,o.kt)("li",{parentName:"ul"},"Plan ahead so that you create a PR for bug fix C first, then refactor B, and finally feature A."))))),(0,o.kt)("li",{parentName:"ul"},"Ask for reviews early and ask for reviews often."),(0,o.kt)("li",{parentName:"ul"},"Avoid unnecessary changes:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Setup a consistent code format in your team so that people do not fight each other for formatting preferences"),(0,o.kt)("li",{parentName:"ul"},"Avoid rewriting other's code to match your style. If it is really problematic, create an issue and do that in a separate PR."))),(0,o.kt)("li",{parentName:"ul"},"Gate any WIP features",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Sometimes it's hard not to break master while features are being incrementally developed."),(0,o.kt)("li",{parentName:"ul"},"e.g. Samwise's repeating task requires refactoring a lot of code. Each PR only refactors one part of the code"),(0,o.kt)("li",{parentName:"ul"},"Gate the incomplete feature behind a flag. For example, this new UI will not be shown unless certain environment variable/localStorage value is set to TRUE.")))))}c.isMDXComponent=!0}}]);