(self.webpackChunkdev_cornelldti_org=self.webpackChunkdev_cornelldti_org||[]).push([[848],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return u},kt:function(){return d}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=c(a),d=r,h=m["".concat(s,".").concat(d)]||m[d]||p[d]||i;return a?n.createElement(h,l(l({ref:t},u),{},{components:a})):n.createElement(h,l({ref:t},u))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},8215:function(e,t,a){"use strict";var n=a(7294);t.Z=function(e){var t=e.children,a=e.hidden,r=e.className;return n.createElement("div",{role:"tabpanel",hidden:a,className:r},t)}},1395:function(e,t,a){"use strict";a.d(t,{Z:function(){return u}});var n=a(7294),r=a(944),i=a(6010),l="tabItem_1uMI",o="tabItemActive_2DSg";var s=37,c=39;var u=function(e){var t=e.lazy,a=e.block,u=e.defaultValue,p=e.values,m=e.groupId,d=e.className,h=(0,r.Z)(),k=h.tabGroupChoices,g=h.setTabGroupChoices,b=(0,n.useState)(u),f=b[0],v=b[1],y=n.Children.toArray(e.children),N=[];if(null!=m){var w=k[m];null!=w&&w!==f&&p.some((function(e){return e.value===w}))&&v(w)}var T=function(e){var t=e.currentTarget,a=N.indexOf(t),n=p[a].value;v(n),null!=m&&(g(m,n),setTimeout((function(){var e,a,n,r,i,l,s,c;(e=t.getBoundingClientRect(),a=e.top,n=e.left,r=e.bottom,i=e.right,l=window,s=l.innerHeight,c=l.innerWidth,a>=0&&i<=c&&r<=s&&n>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(o),setTimeout((function(){return t.classList.remove(o)}),2e3))}),150))},C=function(e){var t,a;switch(e.keyCode){case c:var n=N.indexOf(e.target)+1;a=N[n]||N[0];break;case s:var r=N.indexOf(e.target)-1;a=N[r]||N[N.length-1]}null==(t=a)||t.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":a},d)},p.map((function(e){var t=e.value,a=e.label;return n.createElement("li",{role:"tab",tabIndex:f===t?0:-1,"aria-selected":f===t,className:(0,i.Z)("tabs__item",l,{"tabs__item--active":f===t}),key:t,ref:function(e){return N.push(e)},onKeyDown:C,onFocus:T,onClick:T},a)}))),t?(0,n.cloneElement)(y.filter((function(e){return e.props.value===f}))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},y.map((function(e,t){return(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==f})}))))}},9443:function(e,t,a){"use strict";var n=(0,a(7294).createContext)(void 0);t.Z=n},944:function(e,t,a){"use strict";var n=a(7294),r=a(9443);t.Z=function(){var e=(0,n.useContext)(r.Z);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},3933:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return m}});var n=a(2122),r=a(9756),i=(a(7294),a(3905)),l=a(1395),o=a(8215),s={id:"onboarding-git",title:"Using Git"},c={unversionedId:"onboarding-git",id:"onboarding-git",isDocsHomePage:!1,title:"Using Git",description:"If you are not familiar with Git command line, do not pretend you know it.",source:"@site/docs/onboarding-git.md",sourceDirName:".",slug:"/onboarding-git",permalink:"/docs/onboarding-git",version:"current",frontMatter:{id:"onboarding-git",title:"Using Git"},sidebar:"someSidebar",previous:{title:"Text Editor",permalink:"/docs/onboarding-editor"},next:{title:"Code Quality",permalink:"/docs/guide-code-quality"}},u=[{value:"Setup your project",id:"setup-your-project",children:[]},{value:"Pull latest changes from remote",id:"pull-latest-changes-from-remote",children:[]},{value:"Create a new branch",id:"create-a-new-branch",children:[]},{value:"Delete a branch",id:"delete-a-branch",children:[]},{value:"Review your changes locally",id:"review-your-changes-locally",children:[]},{value:"Select changes to commit",id:"select-changes-to-commit",children:[]},{value:"Push to remote",id:"push-to-remote",children:[]},{value:"Merge in <code>master</code> branch changes",id:"merge-in-master-branch-changes",children:[]},{value:"Amend and force-push",id:"amend-and-force-push",children:[]},{value:"Rebase and force-push",id:"rebase-and-force-push",children:[]}],p={toc:u};function m(e){var t=e.components,s=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,n.Z)({},p,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"If you are not familiar with Git command line, do not pretend you know it."),(0,i.kt)("p",{parentName:"div"},"Instead, install ",(0,i.kt)("a",{parentName:"p",href:"https://desktop.github.com"},"GitHub Desktop"),". It will make your life easier."))),(0,i.kt)("h2",{id:"setup-your-project"},"Setup your project"),(0,i.kt)(l.Z,{groupId:"git-client",defaultValue:"desktop",values:[{label:"GitHub Desktop",value:"desktop"},{label:"Git CLI",value:"cli"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"desktop",mdxType:"TabItem"},(0,i.kt)("p",null,"Install ",(0,i.kt)("a",{parentName:"p",href:"https://desktop.github.com"},"GitHub Desktop"),"."),(0,i.kt)("p",null,"Click ",(0,i.kt)("inlineCode",{parentName:"p"},"Clone or download")," in the repository page and choose ",(0,i.kt)("inlineCode",{parentName:"p"},"Open in Desktop"),"."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Clone from desktop",src:a(3183).Z})),(0,i.kt)("p",null,"GitHub Desktop will auto open and guide you to clone the repository.")),(0,i.kt)(o.Z,{value:"cli",mdxType:"TabItem"},(0,i.kt)("p",null,"Install ",(0,i.kt)("a",{parentName:"p",href:"https://git-scm.com"},"Git"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/cornell-dti/[name of the repository]\n")))),(0,i.kt)("h2",{id:"pull-latest-changes-from-remote"},"Pull latest changes from remote"),(0,i.kt)("p",null,"Try keep your branch up-to-date with remote. Pull often."),(0,i.kt)(l.Z,{groupId:"git-client",defaultValue:"desktop",values:[{label:"GitHub Desktop",value:"desktop"},{label:"Git CLI",value:"cli"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"desktop",mdxType:"TabItem"},(0,i.kt)("p",null,"Click ",(0,i.kt)("inlineCode",{parentName:"p"},"Pull origin")," in the header."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Pull origin",src:a(6598).Z}),"\n",(0,i.kt)("img",{alt:"Pulling origin",src:a(3090).Z}))),(0,i.kt)(o.Z,{value:"cli",mdxType:"TabItem"},(0,i.kt)("p",null,"Inside your working branch, run"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git pull\n")))),(0,i.kt)("h2",{id:"create-a-new-branch"},"Create a new branch"),(0,i.kt)(l.Z,{groupId:"git-client",defaultValue:"desktop",values:[{label:"GitHub Desktop",value:"desktop"},{label:"Git CLI",value:"cli"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"desktop",mdxType:"TabItem"},(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Command/Ctrl + Shift + N")," or click ",(0,i.kt)("inlineCode",{parentName:"p"},"Branch -> New Branch")," in Menu."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"New Branch",src:a(9970).Z})),(0,i.kt)("p",null,"Input the name of the new branch and GitHub Desktop will automatically go to the new branch.")),(0,i.kt)(o.Z,{value:"cli",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout -b [the name of your branch]\n")))),(0,i.kt)("h2",{id:"delete-a-branch"},"Delete a branch"),(0,i.kt)(l.Z,{groupId:"git-client",defaultValue:"desktop",values:[{label:"GitHub Desktop",value:"desktop"},{label:"Git CLI",value:"cli"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"desktop",mdxType:"TabItem"},(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Command/Ctrl + Shift + D")," or click ",(0,i.kt)("inlineCode",{parentName:"p"},"Branch -> Delete")," in Menu."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Delete Branch",src:a(5177).Z})),(0,i.kt)("p",null,"Click the ",(0,i.kt)("inlineCode",{parentName:"p"},"Delete")," button.")),(0,i.kt)(o.Z,{value:"cli",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout master\ngit checkout -D [the name of your branch]\n")))),(0,i.kt)("h2",{id:"review-your-changes-locally"},"Review your changes locally"),(0,i.kt)(l.Z,{groupId:"git-client",defaultValue:"desktop",values:[{label:"GitHub Desktop",value:"desktop"},{label:"Git CLI",value:"cli"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"desktop",mdxType:"TabItem"},(0,i.kt)("p",null,"Just see what's changed directly within GitHub Desktop."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Partial Commit",src:a(4297).Z}))),(0,i.kt)(o.Z,{value:"cli",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git diff\n")))),(0,i.kt)("h2",{id:"select-changes-to-commit"},"Select changes to commit"),(0,i.kt)(l.Z,{groupId:"git-client",defaultValue:"desktop",values:[{label:"GitHub Desktop",value:"desktop"},{label:"Git CLI",value:"cli"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"desktop",mdxType:"TabItem"},(0,i.kt)("p",null,"You can unselect the files you don't want to commit. Inside a file, you can deselect lines that\nyou don't want to commit. (Only lines highlighted with blue on the left will be committed.)"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Partial Commit",src:a(4297).Z})),(0,i.kt)("p",null,"The fill in the commit message, and click ",(0,i.kt)("inlineCode",{parentName:"p"},"Commit to [your branch name]"),"."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Commit",src:a(2904).Z}))),(0,i.kt)(o.Z,{value:"cli",mdxType:"TabItem"},(0,i.kt)("p",null,"If you only want to commit changes in ",(0,i.kt)("inlineCode",{parentName:"p"},"a.js"),", run"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'git add a.js\ngit commit -m "Your commit message"\n')),(0,i.kt)("p",null,"If you only want to commit changes in folder ",(0,i.kt)("inlineCode",{parentName:"p"},"src"),", run"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'git add src\ngit commit -m "Your commit message"\n')),(0,i.kt)("p",null,"If you want to commit all changes, run"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'git add .\ngit commit -m "Your commit message"\n')))),(0,i.kt)("h2",{id:"push-to-remote"},"Push to remote"),(0,i.kt)(l.Z,{groupId:"git-client",defaultValue:"desktop",values:[{label:"GitHub Desktop",value:"desktop"},{label:"Git CLI",value:"cli"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"desktop",mdxType:"TabItem"},(0,i.kt)("p",null,"After you commit, you should push your changes to remote, so that"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If you computer dies, changes will persist;"),(0,i.kt)("li",{parentName:"ul"},"Other team members will see your progress.")),(0,i.kt)("p",null,"Depending on whether you have published your branch before, you will either see"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Publish Branch",src:a(4371).Z})),(0,i.kt)("p",null,"or"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Push",src:a(9282).Z})),(0,i.kt)("p",null,"After you clicked the button, you can see the progress."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Push Progress",src:a(4519).Z}))),(0,i.kt)(o.Z,{value:"cli",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git push\n")),(0,i.kt)("p",null,"If the branch does not exist on remote yet, Git will reject the push but give you some instructions\nlike:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"fatal: The current branch [your-branch-name] has no upstream branch.\nTo push the current branch and set the remote as upstream, use\n\n    git push --set-upstream origin [your-branch-name]\n")),(0,i.kt)("p",null,"Run ",(0,i.kt)("inlineCode",{parentName:"p"},"git push --set-upstream origin [your-branch-name]")," as instructed."))),(0,i.kt)("h2",{id:"merge-in-master-branch-changes"},"Merge in ",(0,i.kt)("inlineCode",{parentName:"h2"},"master")," branch changes"),(0,i.kt)(l.Z,{groupId:"git-client",defaultValue:"desktop",values:[{label:"GitHub Desktop",value:"desktop"},{label:"Git CLI",value:"cli"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"desktop",mdxType:"TabItem"},(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Select History Tab\n",(0,i.kt)("img",{alt:"Merge: Select History Tab",src:a(5647).Z})),(0,i.kt)("li",{parentName:"ol"},"Select ",(0,i.kt)("inlineCode",{parentName:"li"},"master")," branch\n",(0,i.kt)("img",{alt:"Publish Branch",src:a(6572).Z})),(0,i.kt)("li",{parentName:"ol"},"Click the ",(0,i.kt)("inlineCode",{parentName:"li"},"merge")," button\n",(0,i.kt)("img",{alt:"Publish Branch",src:a(7970).Z})),(0,i.kt)("li",{parentName:"ol"},"If there are merge conflicts, GitHub Desktop will prompt you to fix them."))),(0,i.kt)(o.Z,{value:"cli",mdxType:"TabItem"},(0,i.kt)("p",null,"Inside your working branch, run"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git merge master\n")),(0,i.kt)("p",null,", and fix any merge conflicts that arises."))),(0,i.kt)("h2",{id:"amend-and-force-push"},"Amend and force-push"),(0,i.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Only do this if you are sure that you are the only one who will work on this branch."))),(0,i.kt)("p",null,"Sometimes you want to maintain a clean commit history. For example, you don't want to have a series\nof commits like"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"-o- Implement feature foo\n-o- Fix syntax error\n-o- Fix linter error\n-o- Fix linter error again\n-o- Fix syntax error again\n-o- Fix linter error again again\n")),(0,i.kt)("p",null,"You can avoid commits like ",(0,i.kt)("inlineCode",{parentName:"p"},"Fix linter error again again")," by amend your previous commit."),(0,i.kt)("p",null,"Run"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git add .\ngit commit --amend --no-edit\n")),(0,i.kt)("p",null,"to add all your unstaged changes to your commit."),(0,i.kt)("p",null,"If the commit is already pushed to remote, you need to force push."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git push -f\n")),(0,i.kt)("h2",{id:"rebase-and-force-push"},"Rebase and force-push"),(0,i.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Only do this if you are sure that you are the only one who will work on this branch."))),(0,i.kt)("p",null,'Merge commits sometimes turn a nice linear commit history into a messy tree. If you want a nice\nlinear history, you will need to rebase when you want to "merge" in the latest ',(0,i.kt)("inlineCode",{parentName:"p"},"master")," change."),(0,i.kt)(l.Z,{groupId:"git-client",defaultValue:"desktop",values:[{label:"GitHub Desktop",value:"desktop"},{label:"Git CLI",value:"cli"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"desktop",mdxType:"TabItem"},(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"Command/Ctrl + Shift + E")," or click ",(0,i.kt)("inlineCode",{parentName:"li"},"Branch -> Rebase Current Branch")," in menu\n",(0,i.kt)("img",{alt:"Merge: Select History Tab",src:a(1514).Z})),(0,i.kt)("li",{parentName:"ol"},"Select ",(0,i.kt)("inlineCode",{parentName:"li"},"master")," branch and click ",(0,i.kt)("inlineCode",{parentName:"li"},"rebase"),(0,i.kt)("img",{alt:"Publish Branch",src:a(4068).Z})),(0,i.kt)("li",{parentName:"ol"},"If there are merge conflicts, GitHub Desktop will prompt you to fix them."))),(0,i.kt)(o.Z,{value:"cli",mdxType:"TabItem"},(0,i.kt)("p",null,"Inside your working branch, run"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git rebase master\n")),(0,i.kt)("p",null,", and fix any merge conflicts that arises."),(0,i.kt)("p",null,"If the commit is already pushed to remote, you need to force push."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git push -f\n")))))}m.isMDXComponent=!0},6010:function(e,t,a){"use strict";function n(e){var t,a,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(r&&(r+=" "),r+=a);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}function r(){for(var e,t,a=0,r="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(r&&(r+=" "),r+=t);return r}a.d(t,{Z:function(){return r}})},3183:function(e,t,a){"use strict";t.Z=a.p+"assets/images/clone-with-desktop-f32c70b369575a74acc5c441d6432d15.png"},2904:function(e,t,a){"use strict";t.Z=a.p+"assets/images/commit-77f7b083050669a20b6d95b5fa752c07.png"},5177:function(e,t,a){"use strict";t.Z=a.p+"assets/images/delete-branch-074f26f177c79a8ce27fd6fa3d5ccb18.png"},7970:function(e,t,a){"use strict";t.Z=a.p+"assets/images/merge-final-click-99cd820c72e2bec39db94d8785665311.png"},5647:function(e,t,a){"use strict";t.Z=a.p+"assets/images/merge-history-tab-d9bfbccdd745cbe5c06bbb93b7519073.png"},6572:function(e,t,a){"use strict";t.Z=a.p+"assets/images/merge-select-master-d5a5dd57bfb0f8a0ffd50c0c27d6381b.png"},9970:function(e,t,a){"use strict";t.Z=a.p+"assets/images/new-branch-daec918d60c05815e558939cceb2e5b0.png"},4297:function(e,t,a){"use strict";t.Z=a.p+"assets/images/partial-commit-72451c91b08e1bf8b30bd3dca6db1e75.png"},4371:function(e,t,a){"use strict";t.Z=a.p+"assets/images/publish-branch-87dc1d4319cae25360f51006153525b2.png"},6598:function(e,t,a){"use strict";t.Z=a.p+"assets/images/pull-origin-f8c04b46a97854f5d2e096fb5fce94f3.png"},3090:function(e,t,a){"use strict";t.Z=a.p+"assets/images/pulling-origin-9977129b943a1421ecc5974062cfa043.png"},4519:function(e,t,a){"use strict";t.Z=a.p+"assets/images/push-progress-08385f33237faf759006bc972a7db031.png"},9282:function(e,t,a){"use strict";t.Z=a.p+"assets/images/push-60b2e69dcdcb7fb0e9d3324979a1de08.png"},1514:function(e,t,a){"use strict";t.Z=a.p+"assets/images/rebase-menu-40bde0be027a622b7c39b046f5a88481.png"},4068:function(e,t,a){"use strict";t.Z=a.p+"assets/images/rebase-select-master-4cf8906ddf77ccad8eca614caef7df82.png"}}]);