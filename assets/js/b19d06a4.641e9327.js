(self.webpackChunkdev_cornelldti_org=self.webpackChunkdev_cornelldti_org||[]).push([[979],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(r),m=o,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||i;return r?n.createElement(f,a(a({ref:t},c),{},{components:r})):n.createElement(f,a({ref:t},c))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8214:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return a},metadata:function(){return l},toc:function(){return u},default:function(){return c}});var n=r(2122),o=r(9756),i=(r(7294),r(3905)),a={id:"guide-code-review",title:"Code Review"},l={unversionedId:"guide-code-review",id:"guide-code-review",isDocsHomePage:!1,title:"Code Review",description:"Introduction",source:"@site/docs/guide-code-review.md",sourceDirName:".",slug:"/guide-code-review",permalink:"/docs/guide-code-review",version:"current",frontMatter:{id:"guide-code-review",title:"Code Review"},sidebar:"someSidebar",previous:{title:"DevOps",permalink:"/docs/guide-devops"},next:{title:"Important Dates for FA21",permalink:"/docs/resource-timeline-fa21"}},u=[{value:"Introduction",id:"introduction",children:[]},{value:"Reviewer&#39;s Responsibility",id:"reviewers-responsibility",children:[]},{value:"Dos and Don&#39;ts",id:"dos-and-donts",children:[]},{value:"Relevant Docs",id:"relevant-docs",children:[]}],s={toc:u};function c(e){var t=e.components,r=(0,o.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"Code review is necessary to ensure our code quality, because linter and type checker cannot catch\nall problems."),(0,i.kt)("p",null,"At Cornell DTI, you will need 1 approving review to merge your changes to master, and at least 3\napproving review to deploy master to production. Every developer on your team can review your code."),(0,i.kt)("h2",{id:"reviewers-responsibility"},"Reviewer's Responsibility"),(0,i.kt)("p",null,"As a reviewer, you should ask yourself these questions?"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Does the author implement the feature in an efficient way?"),(0,i.kt)("li",{parentName:"ul"},"Has the author considered all edge cases?"),(0,i.kt)("li",{parentName:"ul"},"Does the pull request introduce a security vulnerability?"),(0,i.kt)("li",{parentName:"ul"},"Are there any ugly hacks?"),(0,i.kt)("li",{parentName:"ul"},"etc")),(0,i.kt)("p",null,"If there is anything unclear, you should ask for the author's clarification. Ideally, these\nclafications should also be put in the code comments."),(0,i.kt)("h2",{id:"dos-and-donts"},"Dos and Don'ts"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Do review pull requests often."),(0,i.kt)("li",{parentName:"ul"},"Do reject bad code."),(0,i.kt)("li",{parentName:"ul"},"Do reject pull requests with no summary and test plan."),(0,i.kt)("li",{parentName:"ul"},"Do reject giant pull requests."),(0,i.kt)("li",{parentName:"ul"},"Do address reviewer's concern if they are valid."),(0,i.kt)("li",{parentName:"ul"},"Do defend your approach, if you think your approach is better."),(0,i.kt)("li",{parentName:"ul"},"Do let the ",(0,i.kt)("strong",{parentName:"li"},"author")," merge the pull request."),(0,i.kt)("li",{parentName:"ul"},"Don't take pull request rejections personally."),(0,i.kt)("li",{parentName:"ul"},"Don't ignore your peer's pull requests."),(0,i.kt)("li",{parentName:"ul"},"Don't accept pull requests that you don't understand.")),(0,i.kt)("h2",{id:"relevant-docs"},"Relevant Docs"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/reviewing-changes-in-pull-requests"},"GitHub Pull Requests Review"))))}c.isMDXComponent=!0}}]);